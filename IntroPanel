import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Path2D;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class IntroPanel extends JPanel{
	
	private Rectangle highBackground; 
	private Rectangle lowBackground;
	
	public IntroPanel(){
		setLayout(null); 
		JButton button = new JButton("PLAY NOW");
		button.setBounds(485,475,200,50);
		button.setBackground(Color.GREEN);
		button.setOpaque(true);
		button.setBorderPainted(false);
		button.setForeground(Color.BLACK);
		add(button);
		drawBackground(); 
		
		button.addActionListener(new ActionListener() 
		{
			@Override
			public void actionPerformed(ActionEvent e) 
			{
				setVisible(false);
				new BurgeriaMain().setVisible(true);
			}
			
		});
		

	}
	
	public void drawBackground() {
		highBackground = new Rectangle(0, 0, 1200, 400);
		lowBackground = new Rectangle (0, 400, 1200, 200);
		
	}
	public void paintComponent (Graphics g) {
		Graphics2D g2 = (Graphics2D) g;
		
		
		Color myColor = new Color (50, 121, 168);
		g2.setColor(myColor); 
		g2.fill(highBackground);
		
		g2.setColor(Color.LIGHT_GRAY); 
		g2.fill(lowBackground);
		
		g2.setPaint(Color.WHITE);
        g2.fill(createStar(584, 190, 130, 110, 10, 0));
		
		myColor = new Color (193, 43, 11);
		g2.setColor(myColor); 
		
		g2.setRenderingHint(
				RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		Font font = new Font("Comic Sans MS", Font.BOLD, 40); 
		g.setFont(font);
		g.drawString("BURGERIA", 480, 200);
		
	}
	
	private static Shape createStar(double centerX, double centerY,
	        double innerRadius, double outerRadius, int numRays,
	        double startAngleRad)
	    {
	        Path2D path = new Path2D.Double();
	        double deltaAngleRad = Math.PI / numRays;
	        for (int i = 0; i < numRays * 2; i++)
	        {
	            double angleRad = startAngleRad + i * deltaAngleRad;
	            double ca = Math.cos(angleRad);
	            double sa = Math.sin(angleRad);
	            double relX = ca;
	            double relY = sa;
	            if ((i & 1) == 0)
	            {
	                relX *= outerRadius;
	                relY *= outerRadius;
	            }
	            else
	            {
	                relX *= innerRadius;
	                relY *= innerRadius;
	            }
	            if (i == 0)
	            {
	                path.moveTo(centerX + relX, centerY + relY);
	            }
	            else
	            {
	                path.lineTo(centerX + relX, centerY + relY);
	            }
	        }
	        path.closePath();
	        return path;
	    }

	public static void main(String[] args) {
		JFrame.setDefaultLookAndFeelDecorated(true);
		JFrame myFrame = new JFrame ("Order"); 
		myFrame.setBounds(50,50,1200,600); 
	
		JPanel panel = new IntroPanel(); 
		myFrame.add(panel);
	
		myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);	
		myFrame.setVisible(true);	
		
	}

}
